/*
 @license Angular Treeview version 0.1.6
 â“’ 2013 AHN JAE-HA http://github.com/eu81273/angular.treeview
 License: MIT


 [TREE attribute]
 angular-treeview: the treeview directive
 tree-id : each tree's unique id.
 tree-model : the tree model on $scope.
 node-id : each node's id
 node-label : each node's label
 node-children: each node's children

 <div
 data-angular-treeview="true"
 data-tree-id="tree"
 data-tree-model="roleList"
 data-node-id="roleId"
 data-node-label="roleName"
 data-node-children="children" >
 </div>
 */
!function(e){"use strict"
e.module("angularTreeview",[]).directive("treeModel",["$compile","$parse",function(e,d){return{restrict:"A",link:function(n,c,o){var t=o.treeId,a=o.treeModel,l=o.nodeId||"id",i=o.nodeLabel||"label",r=o.nodeChecked||"checked",s=o.nodeChildren||"children",u=o.checkboxSupport||"false",f=""
"false"!=u&&(f='<input type="checkbox" ng-model="node.'+r+'" ng-change="'+t+'.selectNodeCbx(node)"/> ')
var h='<ul><li data-ng-repeat="node in '+a+'"><i class="collapsed" data-ng-show="node.'+s+'.length && node.collapsed" data-ng-click="'+t+'.selectNodeHead(node)"></i><i class="expanded" data-ng-show="node.'+s+'.length && !node.collapsed" data-ng-click="'+t+'.selectNodeHead(node)"></i><i class="normal" data-ng-hide="node.'+s+'.length"></i> <span data-ng-class="node.selected" data-ng-click="'+t+'.selectNodeLabel(node)">'+f+"{{node."+i+'}}</span><div data-ng-hide="node.collapsed" data-tree-id="'+t+'" data-tree-model="node.'+s+'" data-node-id='+l+" data-node-label="+i+" data-node-children="+s+" data-checkbox-support="+u+"></div></li></ul>"
t&&a&&(o.angularTreeview&&(n[t]=n[t]||{},n[t].api=n[t].api||{},n.$watch("[treeId].api",function(e){var c=n[t],o=d(a),f=function(e){for(var d=[],n=0;n<e.length;n++){d.push(e[n])
var c=f(e[n][s])
d=d.concat(c)}return d},h=function(){c.currentNode&&c.currentNode.selected&&(c.currentNode.selected=void 0,c.currentNode=void 0)},N=function(e){e.selected="selected",c.currentNode=e},p=function(e,d){h()
var c=o(n),t=f(c),a=t.filter(function(n){return n[e]==d})
N(a[0])},g=function(e){var d=e[r]
if(d&&-1==c.checkedNodes.indexOf(e[l]))c.checkedNodes.push(e[l])
else if(!d){var n=c.checkedNodes.indexOf(e[l]);-1!=n&&c.checkedNodes.splice(n,1)}var o=e.children
for(var t in o)o[t][r]=d,g(o[t])},v=function(e,d){if("false"!=u){var c=o(n),t=f(c),a=t.filter(function(n){return n[e]==d})
a[0][r]=!a[0][r],g(a[0])}},k=function(){if("false"!=u)for(var e=o(n),d=0;d<e.length;d++)e[d][r]=!1,g(e[d])}
n[t].api={selectById:function(e){p(l,e)},selectByLabel:function(e){p(i,e)},unselect:function(){h()},toggleById:function(e){v(l,e)},toggleByLabel:function(e){v(i,e)},uncheckAll:function(){k()}}}),"false"!=u&&(n[t].checkedNodes=n[t].checkedNodes||[]),n[t].selectNodeHead=n[t].selectNodeHead||function(e){e.collapsed=!e.collapsed},n[t].selectNodeLabel=n[t].selectNodeLabel||function(e){n[t].currentNode&&n[t].currentNode.selected&&(n[t].currentNode.selected=void 0),e.selected="selected",n[t].currentNode=e},n[t].selectNodeCbx=n[t].selectNodeCbx||function(e){if("false"!=u){var d=e[r]
if(d&&-1==n[t].checkedNodes.indexOf(e[l]))n[t].checkedNodes.push(e[l])
else if(!d){var c=n[t].checkedNodes.indexOf(e[l]);-1!=c&&n[t].checkedNodes.splice(c,1)}var o=e.children
for(var a in o)o[a][r]=d,n[t].selectNodeCbx(o[a])}}),c.html("").append(e(h)(n)))}}}])}(angular)
